$primary-color: #444;
$secondary-color: #eece1a;
$tertiary-color: #d81d46;
$gray-shade: lighten(#444, 65);
$show-home-image: true;
$home-image: url(../img/background.jpg);
$background-opacity: 0.9;

@mixin easeOut {
  transition: all 0.5s ease-out;
}

@mixin background {
  @if $show-home-image {
    &#bg-img {
      background: $home-image;
      background-attachment: fixed;
      background-size: cover;

      &:after {
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        width: 100%;
        height: 100%;
        background: rgba(
          $primary-color,
          $background-opacity
        );
        z-index: -1;
      }
    }
  }
}

// Set text color (main coloring)
@function set-text-color($color) {
  @if (lightness($color) > 40) {
    @return #000;
  } @else {
    @return #fff;
  }
}

// Set text color (yellow coloring)
@function transform-yellow-color($color) {
  @if (lightness($color) > 40) {
    @return $tertiary-color;
  } @else {
    @return $secondary-color;
  }
}

// Set text box background (gray shade coloring)
@function box-color($color) {
  @if (lightness($color) > 40) {
    @return $gray-shade;
  } @else {
    @return "";
  }
}

// Set button color
@function button-color($color) {
  @if (lightness($color) < 40) {
    @return #fff;
  } @else {
    @return rgb(231, 226, 226);
  }
}

// Media query mixins

@mixin mediaSm {
  @media screen and (max-width: 500px) {
    @content;
  }
}

@mixin mediaMd {
  @media screen and (max-width: 768px) {
    @content;
  }
}

@mixin mediaLg {
  @media screen and (min-width: 769px) and (max-width: 1170px) {
    @content;
  }
}

@mixin mediaXl {
  @media screen and (min-width: 1171px) {
    @content;
  }
}
